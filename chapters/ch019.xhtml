<div id="sbo-rt-content"><section id="chapter-15-testing" class="level2 chapterHead" data-number="0.18">
    <h2 class="chapterHead" data-number="0.18"><span class="titlemark">15</span> Testing</h2>

    <p class="normal">Testing is central to creating working software. Here’s the canonical statement describing the importance of testing:</p>

    <blockquote>
      <p class="normal"><span class="cmti-10x-x-109">”Any program feature without an automated test simply doesn’t</span> <span class="cmti-10x-x-109">exist”</span>.</p>

      <p class="normal">(Kent Beck, <span class="cmti-10x-x-109">Extreme Programming Explained: Embrace</span> <span class="cmti-10x-x-109">Change</span>)</p>
    </blockquote>

    <p class="normal">We can distinguish several kinds of testing:</p>

    <p class="normal"><span class="cmbx-10x-x-109">Unit testing:</span></p>

    <p class="normal">This applies to independent <span class="cmti-10x-x-109">units </span>of software: functions, classes, or modules. The unit is tested in isolation to confirm that it works correctly.</p>

    <p class="normal"><span class="cmbx-10x-x-109">Integration testing</span></p>

    <p class="normal">: This combines units to be sure they integrate properly.</p>

    <p class="normal"><span class="cmbx-10x-x-109">System testing</span></p>

    <p class="normal">: This tests an entire application or a system of interrelated applications to be sure that the suite of software components works properly. This is also called <span class="cmbx-10x-x-109">end-to-end testing </span>or <span class="cmbx-10x-x-109">functional ...</span></p></section></div>